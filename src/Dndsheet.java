
import java.util.ListIterator;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JRadioButton;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ajdy5510
 */
public class Dndsheet extends javax.swing.JFrame {
    DefaultListModel ab= new DefaultListModel();
    DefaultListModel listporf = new DefaultListModel();
     DefaultListModel Equip = new DefaultListModel();
      DefaultListModel atk = new DefaultListModel();
       DefaultListModel Cantrip = new DefaultListModel();
      DefaultListModel Spelllist = new DefaultListModel();
    int skillcount=0;
    String skills[] = {null,null};
    Character c;
String race="";
    public Dndsheet() {
        initComponents();
        ListPorf.setModel(listporf);
        listaby.setModel(ab);
        lstequipe.setModel(Equip);
        lstattacks.setModel(atk);
        lstCan.setModel(Cantrip);
        Lstspell.setModel(Spelllist);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        txtlvl = new javax.swing.JLabel();
        lblcharstat = new javax.swing.JLabel();
        charmod = new javax.swing.JLabel();
        lblstrstat = new javax.swing.JLabel();
        lblstrmod = new javax.swing.JLabel();
        lbldexstat = new javax.swing.JLabel();
        dexstat = new javax.swing.JLabel();
        lblconstat = new javax.swing.JLabel();
        conmod = new javax.swing.JLabel();
        lblintstat = new javax.swing.JLabel();
        intmod = new javax.swing.JLabel();
        lblwisstat = new javax.swing.JLabel();
        wismod = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblrace = new javax.swing.JLabel();
        dwnstr = new javax.swing.JButton();
        dwndex = new javax.swing.JButton();
        dwncon = new javax.swing.JButton();
        dwnint = new javax.swing.JButton();
        dwnwis = new javax.swing.JButton();
        upcha = new javax.swing.JButton();
        upwis = new javax.swing.JButton();
        upint = new javax.swing.JButton();
        upcon = new javax.swing.JButton();
        updex = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        lblperc = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btat = new javax.swing.JRadioButton();
        btacr = new javax.swing.JRadioButton();
        btsoh = new javax.swing.JRadioButton();
        btstl = new javax.swing.JRadioButton();
        btarc = new javax.swing.JRadioButton();
        bthis = new javax.swing.JRadioButton();
        btinv = new javax.swing.JRadioButton();
        btnat = new javax.swing.JRadioButton();
        btrel = new javax.swing.JRadioButton();
        btah = new javax.swing.JRadioButton();
        btins = new javax.swing.JRadioButton();
        btmed = new javax.swing.JRadioButton();
        btperc = new javax.swing.JRadioButton();
        btwis = new javax.swing.JRadioButton();
        btdec = new javax.swing.JRadioButton();
        btint = new javax.swing.JRadioButton();
        btperf = new javax.swing.JRadioButton();
        btpers = new javax.swing.JRadioButton();
        btnsetSkills = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        Strength = new javax.swing.JRadioButton();
        Constitiution = new javax.swing.JRadioButton();
        Intelligence = new javax.swing.JRadioButton();
        Wisdom = new javax.swing.JRadioButton();
        Charisma = new javax.swing.JRadioButton();
        Dexterity = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblmaxhp = new javax.swing.JLabel();
        lblac = new javax.swing.JLabel();
        lblinit = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        lblspd = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        Lblgold = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        listaby = new javax.swing.JList<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        ListPorf = new javax.swing.JList<>();
        jScrollPane7 = new javax.swing.JScrollPane();
        lstattacks = new javax.swing.JList<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstequipe = new javax.swing.JList<>();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstCan = new javax.swing.JList<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        Lstspell = new javax.swing.JList<>();
        lblsplslots = new javax.swing.JLabel();
        lblclass = new javax.swing.JLabel();
        btnreset = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mnfight = new javax.swing.JMenuItem();
        mnWizard = new javax.swing.JCheckBoxMenuItem();
        mnbard = new javax.swing.JCheckBoxMenuItem();
        mnbarb = new javax.swing.JMenuItem();
        mnMonk = new javax.swing.JMenuItem();
        mndruid = new javax.swing.JMenuItem();
        MnRogue = new javax.swing.JMenuItem();
        mnpal = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        mnhuman = new javax.swing.JMenuItem();
        mnelf = new javax.swing.JMenuItem();
        mnhflelf = new javax.swing.JMenuItem();
        mndwarf = new javax.swing.JMenuItem();
        mnbrib = new javax.swing.JMenuItem();
        mntief = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        mnsetGender = new javax.swing.JMenuItem();
        mnAllingement = new javax.swing.JMenuItem();
        MnAllingement = new javax.swing.JMenuItem();
        mnweight = new javax.swing.JMenuItem();

        jMenu3.setText("File");
        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");
        jMenuBar2.add(jMenu4);

        jMenuItem5.setText("jMenuItem5");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtlvl.setText("Level:1");

        lblcharstat.setText("charisma");

        charmod.setText("+0");

        lblstrstat.setText("Strength");

        lblstrmod.setText("+0");

        lbldexstat.setText("Dexterity");

        dexstat.setText("+0");

        lblconstat.setText("Constitution");

        conmod.setText("+0");

        lblintstat.setText("Intelligence");

        intmod.setText("+0");

        lblwisstat.setText("wisdom");

        wismod.setText("+0");

        jLabel1.setText("Experience points:0");

        lblrace.setText("Race:");

        dwnstr.setText("Switch Down");
        dwnstr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dwnstrActionPerformed(evt);
            }
        });

        dwndex.setText("Switch Down");
        dwndex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dwndexActionPerformed(evt);
            }
        });

        dwncon.setText("Switch Down");
        dwncon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dwnconActionPerformed(evt);
            }
        });

        dwnint.setText("Switch Down");
        dwnint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dwnintActionPerformed(evt);
            }
        });

        dwnwis.setText("Switch Down");
        dwnwis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dwnwisActionPerformed(evt);
            }
        });

        upcha.setText("Switch Up");
        upcha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upchaActionPerformed(evt);
            }
        });

        upwis.setText("Switch Up");
        upwis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upwisActionPerformed(evt);
            }
        });

        upint.setText("Switch Up");
        upint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upintActionPerformed(evt);
            }
        });

        upcon.setText("Switch Up");
        upcon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upconActionPerformed(evt);
            }
        });

        updex.setText("Switch Up");
        updex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updexActionPerformed(evt);
            }
        });

        jLabel4.setText("Character Name:");

        lblperc.setText("Passive Wisdom(Perception)");

        jLabel8.setText("Proficiency bonus:2");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btat.setText("Athletics(STR)");
        btat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btatActionPerformed(evt);
            }
        });

        btacr.setText("Acrobatics(DEX)");
        btacr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btacrActionPerformed(evt);
            }
        });

        btsoh.setText("Sleight of Hand(DEX)");
        btsoh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btsohActionPerformed(evt);
            }
        });

        btstl.setText("Stealth(DEX)");
        btstl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btstlActionPerformed(evt);
            }
        });

        btarc.setText("Arcana(INT)");
        btarc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btarcActionPerformed(evt);
            }
        });

        bthis.setText("History(INT)");
        bthis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bthisActionPerformed(evt);
            }
        });

        btinv.setText("Investigation(INT)");
        btinv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btinvActionPerformed(evt);
            }
        });

        btnat.setText("Nature(INT)");
        btnat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnatActionPerformed(evt);
            }
        });

        btrel.setText("Religion(INT)");
        btrel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btrelActionPerformed(evt);
            }
        });

        btah.setText("Animal Handling(WIS)");
        btah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btahActionPerformed(evt);
            }
        });

        btins.setText("Insight(WIS)");
        btins.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btinsActionPerformed(evt);
            }
        });

        btmed.setText("Medicine(WIS)");
        btmed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btmedActionPerformed(evt);
            }
        });

        btperc.setText("Perception(WIS)");
        btperc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btpercActionPerformed(evt);
            }
        });

        btwis.setText("Survival(WIS)");
        btwis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btwisActionPerformed(evt);
            }
        });

        btdec.setText("Deception(CHA)");
        btdec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btdecActionPerformed(evt);
            }
        });

        btint.setText("Intimidation(CHA)");
        btint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btintActionPerformed(evt);
            }
        });

        btperf.setText("Performance(CHA)");
        btperf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btperfActionPerformed(evt);
            }
        });

        btpers.setText("Persuasion(CHA)");
        btpers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btpersActionPerformed(evt);
            }
        });

        btnsetSkills.setText("Set Skills");
        btnsetSkills.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsetSkillsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btah)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btat)
                            .addComponent(btstl)
                            .addComponent(btacr)
                            .addComponent(btarc)
                            .addComponent(bthis)
                            .addComponent(btinv)
                            .addComponent(btnat)
                            .addComponent(btrel)
                            .addComponent(btins)
                            .addComponent(btmed)
                            .addComponent(btperc)
                            .addComponent(btwis)
                            .addComponent(btint)
                            .addComponent(btperf)
                            .addComponent(btpers)
                            .addComponent(btsoh))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btdec)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(btnsetSkills)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(btat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btacr)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btsoh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btstl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btarc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bthis)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btinv)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btrel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btah)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btins)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btmed)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btperc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btwis)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btdec)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btint)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btperf)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btpers)
                .addGap(18, 18, 18)
                .addComponent(btnsetSkills)
                .addGap(54, 54, 54))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        Strength.setText("Strength");
        Strength.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StrengthActionPerformed(evt);
            }
        });

        Constitiution.setText("Constitution");
        Constitiution.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConstitiutionActionPerformed(evt);
            }
        });

        Intelligence.setText("Intelligence");
        Intelligence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IntelligenceActionPerformed(evt);
            }
        });

        Wisdom.setText("Wisdom");
        Wisdom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WisdomActionPerformed(evt);
            }
        });

        Charisma.setText("Charisma");
        Charisma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CharismaActionPerformed(evt);
            }
        });

        Dexterity.setText("Dexterity");
        Dexterity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DexterityActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(Constitiution)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Intelligence))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(Strength)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Dexterity)
                        .addGap(16, 16, 16))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(Wisdom)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Charisma)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Strength)
                    .addComponent(Dexterity, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Constitiution)
                    .addComponent(Intelligence))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Wisdom)
                    .addComponent(Charisma))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel9.setText("Proficiencies and Languages:");

        jLabel6.setText("Saving Throws");

        lblmaxhp.setText("Maximum Hp:");

        lblac.setText("Armor Class:");

        lblinit.setText("Initiatve:");

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jLabel13.setText("Backstory:");

        lblspd.setText("Speed:");

        jLabel17.setText("Current Hp:");

        jLabel18.setText("Temporary HP:");

        jLabel19.setText("Attacks and Spellcasting");

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel23.setText("Money:");

        jLabel24.setText("Copper Coins:");

        jLabel25.setText("Silver Coins:");

        jLabel26.setText("Electrum Coins:");

        Lblgold.setText("Gold Coins:");

        jLabel28.setText("Platinum Coins:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24)
                    .addComponent(jLabel25)
                    .addComponent(jLabel26)
                    .addComponent(Lblgold)
                    .addComponent(jLabel28))
                .addGap(0, 26, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Lblgold)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel28)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jLabel29.setText("Equipement:");

        jLabel30.setText("Features and Traits:");

        jScrollPane5.setViewportView(listaby);

        jScrollPane6.setViewportView(ListPorf);

        lstattacks.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Name: \tBonus:\tDamage:" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane7.setViewportView(lstattacks);

        jScrollPane1.setViewportView(lstequipe);

        jLabel7.setText("Spell list");

        jScrollPane3.setViewportView(lstCan);

        jLabel10.setText("Cantrips");

        jLabel11.setText("Spells");

        jScrollPane4.setViewportView(Lstspell);

        lblclass.setText("Class:");

        btnreset.setText("Reset");

        jMenu1.setText("Class");

        mnfight.setText("Fighter");
        mnfight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnfightActionPerformed(evt);
            }
        });
        jMenu1.add(mnfight);

        mnWizard.setText("Wizard");
        mnWizard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnWizardActionPerformed(evt);
            }
        });
        jMenu1.add(mnWizard);

        mnbard.setText("Bard");
        mnbard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnbardActionPerformed(evt);
            }
        });
        jMenu1.add(mnbard);

        mnbarb.setText("Barbarian");
        mnbarb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnbarbActionPerformed(evt);
            }
        });
        jMenu1.add(mnbarb);

        mnMonk.setText("Monk");
        mnMonk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnMonkActionPerformed(evt);
            }
        });
        jMenu1.add(mnMonk);

        mndruid.setText("Druid");
        mndruid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mndruidActionPerformed(evt);
            }
        });
        jMenu1.add(mndruid);

        MnRogue.setText("Rogue");
        MnRogue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnRogueActionPerformed(evt);
            }
        });
        jMenu1.add(MnRogue);

        mnpal.setText("Paladin");
        mnpal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnpalActionPerformed(evt);
            }
        });
        jMenu1.add(mnpal);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Race");

        mnhuman.setText("Human");
        mnhuman.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnhumanActionPerformed(evt);
            }
        });
        jMenu2.add(mnhuman);

        mnelf.setText("Elf");
        mnelf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnelfActionPerformed(evt);
            }
        });
        jMenu2.add(mnelf);

        mnhflelf.setText("Half-Elf");
        mnhflelf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnhflelfActionPerformed(evt);
            }
        });
        jMenu2.add(mnhflelf);

        mndwarf.setText("Dwarf");
        mndwarf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mndwarfActionPerformed(evt);
            }
        });
        jMenu2.add(mndwarf);

        mnbrib.setText("Aarakocra");
        mnbrib.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnbribActionPerformed(evt);
            }
        });
        jMenu2.add(mnbrib);

        mntief.setText("Tiefling");
        mntief.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mntiefActionPerformed(evt);
            }
        });
        jMenu2.add(mntief);

        jMenuBar1.add(jMenu2);

        jMenu5.setText("Character");

        mnsetGender.setText("Set Gender");
        mnsetGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnsetGenderActionPerformed(evt);
            }
        });
        jMenu5.add(mnsetGender);

        mnAllingement.setText("Set Allignement");
        mnAllingement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnAllingementActionPerformed(evt);
            }
        });
        jMenu5.add(mnAllingement);

        MnAllingement.setText("Set Height");
        MnAllingement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnAllingementActionPerformed(evt);
            }
        });
        jMenu5.add(MnAllingement);

        mnweight.setText("Set Weight");
        mnweight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnweightActionPerformed(evt);
            }
        });
        jMenu5.add(mnweight);

        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblperc)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lbldexstat, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(conmod, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(lblstrmod))
                                    .addComponent(lblstrstat, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dexstat)
                                    .addComponent(lblconstat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(dwncon, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(dwndex, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(updex, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(upcon, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(dwnstr, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(charmod)
                            .addComponent(jLabel9)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(intmod))
                                    .addComponent(lblintstat, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(dwnint, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(upint, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel6)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblcharstat, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                                    .addComponent(wismod, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblwisstat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dwnwis, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(upwis, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(upcha, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtlvl)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel29)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblac, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblinit, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblspd, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblmaxhp)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel18))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel30)
                        .addGap(138, 138, 138))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblsplslots))
                    .addComponent(jLabel10)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(92, 92, 92))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(111, 111, 111)
                        .addComponent(lblrace, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblclass))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel8))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(279, 279, 279)
                        .addComponent(jLabel1)))
                .addGap(124, 124, 124)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnreset)
                        .addGap(76, 76, 76))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnreset)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblrace)
                                .addComponent(lblclass)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jLabel8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblstrstat, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(5, 5, 5)
                                        .addComponent(lblstrmod))
                                    .addComponent(dwnstr))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lbldexstat)
                                    .addComponent(updex))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dwndex)
                                    .addComponent(dexstat))
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(upcon)
                                    .addComponent(lblconstat))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dwncon)
                                    .addComponent(conmod))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblintstat)
                                    .addComponent(upint))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(intmod)
                                    .addComponent(dwnint))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblwisstat)
                                    .addComponent(upwis))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dwnwis)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(wismod)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblcharstat)
                                            .addComponent(upcha))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(charmod)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblperc)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtlvl))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblac)
                                    .addComponent(lblinit)
                                    .addComponent(lblspd))
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel17)
                                    .addComponent(lblmaxhp)
                                    .addComponent(jLabel18))
                                .addGap(40, 40, 40)
                                .addComponent(jLabel19)
                                .addGap(1, 1, 1)
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel29)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel30)
                                    .addComponent(jLabel7)
                                    .addComponent(lblsplslots))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 719, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel10)
                                            .addComponent(jLabel11))
                                        .addGap(5, 5, 5)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane3)
                                            .addComponent(jScrollPane4))))))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    void setSkills(String  b){
        if(skills[0] != null && skills[1] !=null) 
            return;
        if(skills[0]==null) skills[0]=b;
        else skills[1] = b;
        showSkills();
    }
    
    void showSkills(){
        for (int i = 0; i < 2; i++) {
            System.out.println(skills[i]);
        }
    }
    
    void removeSkills(String  b){        
        if (b.equals(skills[0])) skills[0]=null;
        else if (b.equals(skills[1])) skills[1]=null;
        showSkills();
    }
    
    private void dwndexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dwndexActionPerformed
          int temp1, temp2;
    temp1 = c.getDex();
    temp2 = c.getCon();
       
    
  
    lbldexstat.setText("Dexterity " + temp1);
    dexstat.setText(""+c.modgetter(temp1));
      lblconstat.setText("Constitution "+temp2);
    conmod.setText(""+c.modgetter(temp2));
    c.setDex(temp2);
    c.setCon(temp1);
    }//GEN-LAST:event_dwndexActionPerformed

    private void StrengthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StrengthActionPerformed
       
    }//GEN-LAST:event_StrengthActionPerformed

    void updateSkills(JRadioButton b){
        if(b.isSelected() && (skills[0] != null && skills[1] !=null) ){
            b.setSelected(false);
            return;
        }
        
        if (b.isSelected()){
            setSkills(b.getText());
            skillcount++;
        }
        else{
            removeSkills(b.getText());
            skillcount--;
        }
        
    }
    
    private void btatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btatActionPerformed
        updateSkills(btat);     
         c.addSkill("Athletics");
    }//GEN-LAST:event_btatActionPerformed

    private void btacrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btacrActionPerformed
        // TODO add your handling code here:
         updateSkills(btacr);
          c.addSkill("Acrobatics");
    }//GEN-LAST:event_btacrActionPerformed

    private void btsohActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btsohActionPerformed
        // TODO add your handling code here:
         updateSkills(btsoh); 
          c.addSkill("Sleight of Hand");
    }//GEN-LAST:event_btsohActionPerformed

    private void btstlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btstlActionPerformed
        // TODO add your handling code here:
        updateSkills(btstl); 
         c.addSkill("Stealth");
    }//GEN-LAST:event_btstlActionPerformed

    private void btarcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btarcActionPerformed
        // TODO add your handling code here:
        updateSkills(btarc); 
         c.addSkill("Arcana");
    }//GEN-LAST:event_btarcActionPerformed

    private void bthisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bthisActionPerformed
        // TODO add your handling code here:
        updateSkills(bthis);
         c.addSkill("History ");
    }//GEN-LAST:event_bthisActionPerformed

    private void btinvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btinvActionPerformed
        // TODO add your handling code here:
        updateSkills(btinv); 
         c.addSkill("Investigation");
    }//GEN-LAST:event_btinvActionPerformed

    private void btnatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnatActionPerformed
        // TODO add your handling code here:
        updateSkills(btat); 
         c.addSkill("Nature ");
    }//GEN-LAST:event_btnatActionPerformed

    private void btrelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btrelActionPerformed
        // TODO add your handling code here:
        updateSkills(btrel); 
        c.addSkill("Religion");
    }//GEN-LAST:event_btrelActionPerformed

    private void btahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btahActionPerformed
        // TODO add your handling code here:
        updateSkills(btah); 
         c.addSkill("Animal Handling");
    }//GEN-LAST:event_btahActionPerformed

    private void btinsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btinsActionPerformed
        // TODO add your handling code here:
        updateSkills(btins); 
         c.addSkill("Insight");
    }//GEN-LAST:event_btinsActionPerformed

    private void btmedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btmedActionPerformed
        // TODO add your handling code here:
        updateSkills(btmed); 
         c.addSkill("Medicine");
    }//GEN-LAST:event_btmedActionPerformed

    private void btpercActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btpercActionPerformed
        // TODO add your handling code here:
        updateSkills(btperc); 
         c.addSkill("Perception");
    }//GEN-LAST:event_btpercActionPerformed

    private void btwisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btwisActionPerformed
        // TODO add your handling code here:
        updateSkills(btwis); 
    }//GEN-LAST:event_btwisActionPerformed

    private void btdecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btdecActionPerformed
        // TODO add your handling code here:
        updateSkills(btdec); 
         c.addSkill("Deception");
    }//GEN-LAST:event_btdecActionPerformed

    private void btintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btintActionPerformed
        // TODO add your handling code here:
        updateSkills(btint); 
         c.addSkill("Intimidation");
    }//GEN-LAST:event_btintActionPerformed

    private void btperfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btperfActionPerformed
        // TODO add your handling code here:
        updateSkills(btperf); 
         c.addSkill("Performance");
    }//GEN-LAST:event_btperfActionPerformed

    private void btpersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btpersActionPerformed

        updateSkills(btpers); 
        c.addSkill("Persuasion");
    }//GEN-LAST:event_btpersActionPerformed

    private void dwnstrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dwnstrActionPerformed
    
    int temp1, temp2;
    temp1 = c.getStr();
    temp2 = c.getDex();
       
    
    lblstrstat.setText("Strength " + temp1);
    lblstrmod.setText(""+ c.modgetter(temp1));
    lbldexstat.setText("Dexterity " + temp2);
    dexstat.setText(""+c.modgetter(temp2));
    
    c.setDex(temp1);
    c.setStr(temp2);
    
    }//GEN-LAST:event_dwnstrActionPerformed

    private void updexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updexActionPerformed
     int temp1, temp2;
    temp1 = c.getStr();
    temp2 = c.getDex();
       
    
    lblstrstat.setText("Strength " + temp1);
    lblstrmod.setText(""+ c.modgetter(temp2));
    lbldexstat.setText("Dexterity " + temp2);
    dexstat.setText(""+c.modgetter(temp2));
    
    c.setDex(temp1);
    c.setStr(temp2);
    
    }//GEN-LAST:event_updexActionPerformed

    private void upconActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upconActionPerformed
               int temp1, temp2;
    temp1 = c.getDex();
    temp2 = c.getCon();
       
    
  
    lbldexstat.setText("Dexterity " + temp1);
    dexstat.setText(""+c.modgetter(temp1));
      lblconstat.setText("Constitution "+temp2);
    conmod.setText(""+c.modgetter(temp2));
    c.setDex(temp2);
    c.setCon(temp1);
    }//GEN-LAST:event_upconActionPerformed

    private void dwnconActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dwnconActionPerformed
   lblintstat.setText("Intelligence "+c.getCon());
    intmod.setText(""+c.modgetter(c.getCon()));
    lblconstat.setText("Constitution "+c.getIint());
    conmod.setText(""+c.modgetter(c.getIint()));
    }//GEN-LAST:event_dwnconActionPerformed

    private void upintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upintActionPerformed
         lblintstat.setText("Intelligence "+c.getCon());
    intmod.setText(""+c.modgetter(c.getCon()));
    lblconstat.setText("Constitution "+c.getIint());
    conmod.setText(""+c.modgetter(c.getIint()));
    }//GEN-LAST:event_upintActionPerformed

    private void dwnintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dwnintActionPerformed
        lblwisstat.setText("Wisdom "+c.getWis());
    wismod.setText(""+c.modgetter(c.getWis()));
    lblintstat.setText("Intelligence "+c.getIint());
    intmod.setText(""+c.modgetter(c.getIint()));
    }//GEN-LAST:event_dwnintActionPerformed

    private void upwisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upwisActionPerformed
        lblwisstat.setText("Wisdom "+c.getIint());
    wismod.setText(""+c.modgetter(c.getIint()));
    lblintstat.setText("Intelligence "+c.getWis());
    intmod.setText(""+c.modgetter(c.getWis()));
    }//GEN-LAST:event_upwisActionPerformed

    private void dwnwisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dwnwisActionPerformed
        lblcharstat.setText("Charisma "+c.getCha());
    charmod.setText(""+c.modgetter(c.getCha()));
    lblwisstat.setText("Wisdom "+c.getWis());
    wismod.setText(""+c.modgetter(c.getWis()));
    }//GEN-LAST:event_dwnwisActionPerformed

    private void upchaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upchaActionPerformed

   lblcharstat.setText("Charisma "+c.getWis());
    charmod.setText(""+c.modgetter(c.getWis()));
    lblwisstat.setText("Wisdom "+c.getCha());
    wismod.setText(""+c.modgetter(c.getCha()));
    }//GEN-LAST:event_upchaActionPerformed

    private void mnfightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnfightActionPerformed
   RealFighterPopup popup = new RealFighterPopup(this, true);
        popup.setModal(true);
        popup.setLocationRelativeTo(this);
        popup.setVisible(true);
        char response = popup.getSelected();
        String style=popup.getFtstyle();

        Fighter c= new Fighter(txtname.getText(),race);
        c.FightingStyle(style);
    c.abilities();
            c.proficiencies();
            c.equipement(response);
     Strength.setSelected(true);
     Dexterity.setSelected(false);
     Constitiution.setSelected(true);
     Intelligence.setSelected(false);
     Wisdom.setSelected(false);
     Charisma.setSelected(false);
     Lblgold.setText("Gold coins: "+c.getmoney());
     lblstrstat.setText("Strength "+c.getStr());
    lblstrmod.setText(""+c.modgetter(c.getStr()));
    lbldexstat.setText("Dexterity "+c.getDex());
    dexstat.setText(""+c.modgetter(c.getDex()));
        lblconstat.setText("Constitution "+c.getCon());
    conmod.setText(""+c.modgetter(c.getCon()));
        lblintstat.setText("Intelligence "+c.getIint());
    intmod.setText(""+c.modgetter(c.getIint()));
        lblwisstat.setText("Wisdom "+c.getWis());
    wismod.setText(""+c.modgetter(c.getWis()));
        lblcharstat.setText("Charisma "+c.getCha());
    charmod.setText(""+c.modgetter(c.getCha()));
      c.attacks(c.modgetter(c.getDex()), c.pb, response);
 c.hpget(c.getCon());
 c.acget(response, c.modgetter(c.dex));
 lblac.setText("Armor Class: "+c.getAc());
    lblmaxhp.setText("Max Hp "+c.getHp());
    lblinit.setText("Initiative "+c.modgetter(c.getDex()));
    lblperc.setText("Passive Wisdom(Perception) "+c.getPerc());
    
         for (String p:c.getProf()) {
             listporf.addElement(p);
        }
        for (String aby: c.getAbilities()) {
            ab.addElement(aby);
        }
        for (String eqp:c.getEquip()) {
            Equip.addElement(eqp);
        }
        for (String atkn:c.getattack()) {
             atk.addElement(atkn);
        }
    mnfight.setEnabled(false);
    }//GEN-LAST:event_mnfightActionPerformed

    private void mnhumanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnhumanActionPerformed
        
        c.getRaceData("Human");
        race.equals("Human");
             lblstrstat.setText("Strength "+(c.getStr()+1));
    lblstrmod.setText(""+c.modgetter(c.getStr()+1));
    lbldexstat.setText("Dexterity "+(c.getDex()+1));
    dexstat.setText(""+c.modgetter(c.getDex()+1));
        lblconstat.setText("Constitution "+(c.getCon()+1));
    conmod.setText(""+c.modgetter(c.getCon()+1));
        lblintstat.setText("Intelligence "+(c.getIint()+1));
    intmod.setText(""+c.modgetter(c.getIint()+1));
        lblwisstat.setText("Wisdom "+(c.getWis()+1));
    wismod.setText(""+c.modgetter(c.getWis()+1));
        lblcharstat.setText("Charisma "+(c.getCha()+1));
    charmod.setText(""+c.modgetter(c.getCha()+1));
     c.hpget(c.getCon());
    lblmaxhp.setText("Max Hp "+c.getHp());
    lblinit.setText("Initiative: "+c.modgetter(c.getDex()));
    lblperc.setText("Passive Wisdom(Perception) "+c.getPerc());
    }//GEN-LAST:event_mnhumanActionPerformed

    private void btnsetSkillsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsetSkillsActionPerformed
      c.getSkills();
      
    }//GEN-LAST:event_btnsetSkillsActionPerformed

    private void mnWizardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnWizardActionPerformed
     ActualPopup popup = new ActualPopup(this, true);
        popup.setModal(true);
        popup.setLocationRelativeTo(this);
        popup.setVisible(true);
        char response = popup.getSelected();
       Wizard c= new Wizard(txtname.getText(),race);
        c.equipement(response);
       c.spelllist(response);
       c.cantrips(response);
        c.abilities();
            c.proficiencies();
    Strength.setSelected(false);
     Dexterity.setSelected(false);
     Constitiution.setSelected(false);
     Intelligence.setSelected(true);
     Wisdom.setSelected(true);
     Charisma.setSelected(false);
     Lblgold.setText("Gold coins: "+c.getmoney());
     lblstrstat.setText("Strength "+c.getStr());
    lblstrmod.setText(""+c.modgetter(c.getStr()));
    lbldexstat.setText("Dexterity "+c.getDex());
    dexstat.setText(""+c.modgetter(c.getDex()));
        lblconstat.setText("Constitution "+c.getCon());
    conmod.setText(""+c.modgetter(c.getCon()));
        lblintstat.setText("Intelligence "+c.getIint());
    intmod.setText(""+c.modgetter(c.getIint()));
        lblwisstat.setText("Wisdom "+c.getWis());
    wismod.setText(""+c.modgetter(c.getWis()));
        lblcharstat.setText("Charisma "+c.getCha());
    charmod.setText(""+c.modgetter(c.getCha()));
     c.attacks(c.modgetter(c.getDex()), c.pb, response);
 c.hpget(c.getCon());
 c.acget(response, c.modgetter(c.dex));
 lblac.setText("Armor Class: "+c.getAc());
    lblmaxhp.setText("Max Hp "+c.getHp());
    lblinit.setText("Initiative "+c.modgetter(c.getDex()));
    lblperc.setText("Passive Wisdom(Perception) "+c.getPerc());
    
        for (String p:c.getProf()) {
             listporf.addElement(p);
        }
        for (String aby: c.getAbilities()) {
            ab.addElement(aby);
        }
        for (String eqp:c.getEquip()) {
            Equip.addElement(eqp);
        }
        for (String atkn:c.getattack()) {
             atk.addElement(atkn);
        }
       for (String spl:c.getSpell()) {
             Spelllist.addElement(spl);
        }
       for (String Can:c.getCantrip()) {
             Cantrip.addElement(Can);
        }
       
       
    
    }//GEN-LAST:event_mnWizardActionPerformed

    private void DexterityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DexterityActionPerformed
       
    }//GEN-LAST:event_DexterityActionPerformed

    private void ConstitiutionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConstitiutionActionPerformed
        
    }//GEN-LAST:event_ConstitiutionActionPerformed

    private void IntelligenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IntelligenceActionPerformed
     
    }//GEN-LAST:event_IntelligenceActionPerformed

    private void WisdomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WisdomActionPerformed
       
    }//GEN-LAST:event_WisdomActionPerformed

    private void CharismaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CharismaActionPerformed
        
    }//GEN-LAST:event_CharismaActionPerformed

    private void mnelfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnelfActionPerformed

        c.getRaceData("Elf");
        race.equals("Elf");
        
        lblstrstat.setText("Strength "+c.getStr());
    lblstrmod.setText(""+c.modgetter(c.getStr()));
    lbldexstat.setText("Dexterity "+(c.getDex()+2));
    dexstat.setText(""+c.modgetter(c.getDex()+2));
        lblconstat.setText("Constitution "+c.getCon());
    conmod.setText(""+c.modgetter(c.getCon()));
        lblintstat.setText("Intelligence "+c.getIint()+1);
    intmod.setText(""+c.modgetter(c.getIint()+1));
        lblwisstat.setText("Wisdom "+c.getWis());
    wismod.setText(""+c.modgetter(c.getWis()));
        lblcharstat.setText("Charisma "+c.getCha());
    charmod.setText(""+c.modgetter(c.getCha()));
 c.hpget(c.getCon());
    lblmaxhp.setText("Max Hp "+c.getHp());
    lblinit.setText("Initiative "+c.modgetter(c.getDex()));
    lblperc.setText("Passive Wisdom(Perception) "+c.getPerc());
    
           for (String p:c.getProf()) {
             listporf.addElement(p);
        }
        for (String aby: c.getAbilities()) {
            ab.addElement(aby);
        }
        for (String eqp:c.getEquip()) {
            Equip.addElement(eqp);
        }
        for (String atkn:c.getattack()) {
             atk.addElement(atkn);
        }
    }//GEN-LAST:event_mnelfActionPerformed

    private void mnbardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnbardActionPerformed
 ActualPopup popup = new ActualPopup(this, true);
        popup.setModal(true);
        popup.setLocationRelativeTo(this);
        popup.setVisible(true);
        char response = popup.getSelected();
      Bard  c=new Bard(txtname.getText(), race);
        c.abilities();
            c.proficiencies();
            c.Cantriplist(response);
            c.Spellist(response);
        Strength.setSelected(false);
     Dexterity.setSelected(true);
     Constitiution.setSelected(false);
     Intelligence.setSelected(false);
     Wisdom.setSelected(false);
     Charisma.setSelected(true);
     Lblgold.setText("Gold coins: "+c.getmoney());
     lblstrstat.setText("Strength "+c.getStr());
    lblstrmod.setText(""+c.modgetter(c.getStr()));
    lbldexstat.setText("Dexterity "+c.getDex());
    dexstat.setText(""+c.modgetter(c.getDex()));
        lblconstat.setText("Constitution "+c.getCon());
    conmod.setText(""+c.modgetter(c.getCon()));
        lblintstat.setText("Intelligence "+c.getIint());
    intmod.setText(""+c.modgetter(c.getIint()));
        lblwisstat.setText("Wisdom "+c.getWis());
    wismod.setText(""+c.modgetter(c.getWis()));
        lblcharstat.setText("Charisma "+c.getCha());
    charmod.setText(""+c.modgetter(c.getCha()));
    c.attacks(c.modgetter(c.getDex()), c.pb, response);
 c.hpget(c.getCon());
 c.acget(response, c.modgetter(c.dex));
 lblac.setText("Armor Class: "+c.getAc());
    lblmaxhp.setText("Max Hp "+c.getHp());
    lblinit.setText("Initiative "+c.modgetter(c.getDex()));
    lblperc.setText("Passive Wisdom(Perception) "+c.getPerc());
    
          for (String p:c.getProf()) {
             listporf.addElement(p);
        }
        for (String aby: c.getAbilities()) {
            ab.addElement(aby);
        }
        for (String eqp:c.getEquip()) {
            Equip.addElement(eqp);
        }
        for (String atkn:c.getattack()) {
             atk.addElement(atkn);
        }
         for (String spl:c.getSpell()) {
             Spelllist.addElement(spl);
        }
       for (String Can:c.getCantrip()) {
             Cantrip.addElement(Can);
        }
    }//GEN-LAST:event_mnbardActionPerformed

    private void mnbarbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnbarbActionPerformed
  ActualPopup popup = new ActualPopup(this, true);
        popup.setModal(true);
        popup.setLocationRelativeTo(this);
        popup.setVisible(true);
        char response = popup.getSelected();
        c=new Barbarian(txtname.getText(), race);
        c.abilities();
            c.proficiencies();
        Strength.setSelected(true);
     Dexterity.setSelected(false);
     Constitiution.setSelected(true);
     Intelligence.setSelected(false);
     Wisdom.setSelected(false);
     Charisma.setSelected(false);
     Lblgold.setText("Gold coins: "+c.getmoney());
     lblstrstat.setText("Strength "+c.getStr());
    lblstrmod.setText(""+c.modgetter(c.getStr()));
    lbldexstat.setText("Dexterity "+c.getDex());
    dexstat.setText(""+c.modgetter(c.getDex()));
        lblconstat.setText("Constitution "+c.getCon());
    conmod.setText(""+c.modgetter(c.getCon()));
        lblintstat.setText("Intelligence "+c.getIint());
    intmod.setText(""+c.modgetter(c.getIint()));
        lblwisstat.setText("Wisdom "+c.getWis());
    wismod.setText(""+c.modgetter(c.getWis()));
        lblcharstat.setText("Charisma "+c.getCha());
    charmod.setText(""+c.modgetter(c.getCha()));
    c.attacks(c.modgetter(c.getStr()), c.pb, response);
 c.hpget(c.getCon());
 c.acget(response, c.modgetter(c.dex));
 lblac.setText("Armor Class: "+c.getAc());
    lblmaxhp.setText("Max Hp "+c.getHp());
    lblinit.setText("Initiative "+c.modgetter(c.getDex()));
    lblperc.setText("Passive Wisdom(Perception) "+c.getPerc());
       for (String p:c.getProf()) {
             listporf.addElement(p);
        }
        for (String aby: c.getAbilities()) {
            ab.addElement(aby);
        }
        for (String eqp:c.getEquip()) {
            Equip.addElement(eqp);
        }
        for (String atkn:c.getattack()) {
             atk.addElement(atkn);
        }
        
    }//GEN-LAST:event_mnbarbActionPerformed

    private void mnAllingementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnAllingementActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnAllingementActionPerformed

    private void mnMonkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnMonkActionPerformed
        ActualPopup popup = new ActualPopup(this, true);
        popup.setModal(true);
        popup.setLocationRelativeTo(this);
        popup.setVisible(true);
        char response = popup.getSelected();
        c=new Monk(txtname.getText(), race);
        Strength.setSelected(true);
     Dexterity.setSelected(true);
     Constitiution.setSelected(false);
     Intelligence.setSelected(false);
     Wisdom.setSelected(false);
     Charisma.setSelected(false);
     Lblgold.setText("Gold coins: "+c.getmoney());
     lblstrstat.setText("Strength "+c.getStr());
    lblstrmod.setText(""+c.modgetter(c.getStr()));
    lbldexstat.setText("Dexterity "+c.getDex());
    dexstat.setText(""+c.modgetter(c.getDex()));
        lblconstat.setText("Constitution "+c.getCon());
    conmod.setText(""+c.modgetter(c.getCon()));
        lblintstat.setText("Intelligence "+c.getIint());
    intmod.setText(""+c.modgetter(c.getIint()));
        lblwisstat.setText("Wisdom "+c.getWis());
    wismod.setText(""+c.modgetter(c.getWis()));
        lblcharstat.setText("Charisma "+c.getCha());
    charmod.setText(""+c.modgetter(c.getCha()));
    c.attacks(c.modgetter(c.getDex()), c.pb, response);
 c.hpget(c.getCon());
 c.acget(response, c.modgetter(c.dex));
 lblac.setText("Armor Class: "+c.getAc());
    lblmaxhp.setText("Max Hp "+c.getHp());
    lblinit.setText("Initiative "+c.modgetter(c.getDex()));
    lblperc.setText("Passive Wisdom(Perception) "+c.getPerc());
    
         for (String p:c.getProf()) {
             listporf.addElement(p);
        }
        for (String aby: c.getAbilities()) {
            ab.addElement(aby);
        }
        for (String eqp:c.getEquip()) {
            Equip.addElement(eqp);
        }
        for (String atkn:c.getattack()) {
             atk.addElement(atkn);
        }
    }//GEN-LAST:event_mnMonkActionPerformed

    private void mnhflelfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnhflelfActionPerformed
  
        c.getRaceData("Half-Elf");
        race.equals("Half-Elf");
        
        lblstrstat.setText("Strength "+c.getStr());
    lblstrmod.setText(""+c.modgetter(c.getStr()));
    lbldexstat.setText("Dexterity "+(c.getDex()+1));
    dexstat.setText(""+c.modgetter(c.getDex()+1));
        lblconstat.setText("Constitution "+c.getCon());
    conmod.setText(""+c.modgetter(c.getCon()));
        lblintstat.setText("Intelligence "+c.getIint()+2);
    intmod.setText(""+c.modgetter(c.getIint())+2);
        lblwisstat.setText("Wisdom "+c.getWis());
    wismod.setText(""+c.modgetter(c.getWis()));
        lblcharstat.setText("Charisma "+c.getCha()+2);
    charmod.setText(""+c.modgetter(c.getCha()+2));
 c.hpget(c.getCon());
    lblmaxhp.setText("Max Hp "+c.getHp());
    lblinit.setText("Initiative "+c.modgetter(c.getDex()));
    lblperc.setText("Passive Wisdom(Perception) "+c.getPerc());
    
   for (String p:c.getProf()) {
             listporf.addElement(p);
        }
        for (String aby: c.getAbilities()) {
            ab.addElement(aby);
        }
    
    }//GEN-LAST:event_mnhflelfActionPerformed

    private void mndwarfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mndwarfActionPerformed
       
        c.getRaceData("Dwarf");
        race.equals("Dwarf");
        
        lblstrstat.setText("Strength "+c.getStr()+2);
    lblstrmod.setText(""+c.modgetter(c.getStr())+2);
    lbldexstat.setText("Dexterity "+(c.getDex()));
    dexstat.setText(""+c.modgetter(c.getDex()));
        lblconstat.setText("Constitution "+c.getCon()+2);
    conmod.setText(""+c.modgetter(c.getCon())+2);
        lblintstat.setText("Intelligence "+c.getIint());
    intmod.setText(""+c.modgetter(c.getIint()));
        lblwisstat.setText("Wisdom "+c.getWis());
    wismod.setText(""+c.modgetter(c.getWis()));
        lblcharstat.setText("Charisma "+c.getCha());
    charmod.setText(""+c.modgetter(c.getCha()));
 c.hpget(c.getCon());
    lblmaxhp.setText("Max Hp "+c.getHp());
    lblinit.setText("Initiative "+c.modgetter(c.getDex()));
    lblperc.setText("Passive Wisdom(Perception) "+c.getPerc());
    
          for (String p:c.getProf()) {
             listporf.addElement(p);
        }
        for (String aby: c.getAbilities()) {
            ab.addElement(aby);
        }
     
    }//GEN-LAST:event_mndwarfActionPerformed

    private void mntiefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mntiefActionPerformed
         
        c.getRaceData("Tiefling");
        race.equals("Tieflimg");
        
        lblstrstat.setText("Strength "+c.getStr());
    lblstrmod.setText(""+c.modgetter(c.getStr()));
    lbldexstat.setText("Dexterity "+(c.getDex()));
    dexstat.setText(""+c.modgetter(c.getDex()));
        lblconstat.setText("Constitution "+c.getCon());
    conmod.setText(""+c.modgetter(c.getCon()));
        lblintstat.setText("Intelligence "+c.getIint()+1);
    intmod.setText(""+c.modgetter(c.getIint()+1));
        lblwisstat.setText("Wisdom "+c.getWis());
    wismod.setText(""+c.modgetter(c.getWis()));
        lblcharstat.setText("Charisma "+c.getCha()+2);
    charmod.setText(""+c.modgetter(c.getCha()+2));
 c.hpget(c.getCon());
    lblmaxhp.setText("Max Hp "+c.getHp());
    lblinit.setText("Initiative "+c.modgetter(c.getDex()));
    lblperc.setText("Passive Wisdom(Perception) "+c.getPerc());
    
         for (String p:c.getProf()) {
             listporf.addElement(p);
        }
        for (String aby: c.getAbilities()) {
            ab.addElement(aby);
        }
   
    }//GEN-LAST:event_mntiefActionPerformed

    private void mnbribActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnbribActionPerformed
 
        c.getRaceData("Aarakocra");
        race.equals("Aarakocra");
        
        lblstrstat.setText("Strength "+c.getStr());
    lblstrmod.setText(""+c.modgetter(c.getStr()));
    lbldexstat.setText("Dexterity "+(c.getDex()+2));
    dexstat.setText(""+c.modgetter(c.getDex()+2));
        lblconstat.setText("Constitution "+c.getCon());
    conmod.setText(""+c.modgetter(c.getCon()));
        lblintstat.setText("Intelligence "+c.getIint());
    intmod.setText(""+c.modgetter(c.getIint()));
        lblwisstat.setText("Wisdom "+c.getWis()+1);
    wismod.setText(""+c.modgetter(c.getWis())+1);
        lblcharstat.setText("Charisma "+c.getCha());
    charmod.setText(""+c.modgetter(c.getCha()));
 c.hpget(c.getCon());
    lblmaxhp.setText("Max Hp "+c.getHp());
    lblinit.setText("Initiative "+c.modgetter(c.getDex()));
    lblperc.setText("Passive Wisdom(Perception) "+c.getPerc());
    
          for (String p:c.getProf()) {
             listporf.addElement(p);
        }
        for (String aby: c.getAbilities()) {
            ab.addElement(aby);
        }
       
    }//GEN-LAST:event_mnbribActionPerformed

    private void mndruidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mndruidActionPerformed
          ActualPopup popup = new ActualPopup(this, true);
        popup.setModal(true);
        popup.setLocationRelativeTo(this);
        popup.setVisible(true);
        char response = popup.getSelected();    
        Druid c=new Druid(txtname.getText(), race);
            c.abilities();
            c.proficiencies();
            c.CantripList(response);
            c.SpellList(response);
        Strength.setSelected(false);
     Dexterity.setSelected(false);
     Constitiution.setSelected(false);
     Intelligence.setSelected(true);
     Wisdom.setSelected(true);
     Charisma.setSelected(false);
     Lblgold.setText("Gold coins: "+c.getmoney());
     lblstrstat.setText("Strength "+c.getStr());
    lblstrmod.setText(""+c.modgetter(c.getStr()));
    lbldexstat.setText("Dexterity "+c.getDex());
    dexstat.setText(""+c.modgetter(c.getDex()));
        lblconstat.setText("Constitution "+c.getCon());
    conmod.setText(""+c.modgetter(c.getCon()));
        lblintstat.setText("Intelligence "+c.getIint());
    intmod.setText(""+c.modgetter(c.getIint()));
        lblwisstat.setText("Wisdom "+c.getWis());
    wismod.setText(""+c.modgetter(c.getWis()));
        lblcharstat.setText("Charisma "+c.getCha());
    charmod.setText(""+c.modgetter(c.getCha()));
    c.attacks(c.modgetter(c.getStr()), c.pb, response);
 c.hpget(c.getCon());
 c.acget(response, c.modgetter(c.dex));
 lblac.setText("Armor Class: "+c.getAc());
    lblmaxhp.setText("Max Hp "+c.getHp());
    lblinit.setText("Initiative "+c.modgetter(c.getDex()));
    lblperc.setText("Passive Wisdom(Perception) "+c.getPerc());
    
         for (String p:c.getProf()) {
             listporf.addElement(p);
        }
        for (String aby: c.getAbilities()) {
            ab.addElement(aby);
        }
        for (String eqp:c.getEquip()) {
            Equip.addElement(eqp);
        }
        for (String atkn:c.getattack()) {
             atk.addElement(atkn);
        }
         for (String spl:c.getSpell()) {
             Spelllist.addElement(spl);
        }
       for (String Can:c.getCantrip()) {
             Cantrip.addElement(Can);
        }
    }//GEN-LAST:event_mndruidActionPerformed

    private void MnRogueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnRogueActionPerformed
     ActualPopup popup = new ActualPopup(this, true);
        popup.setModal(true);
        popup.setLocationRelativeTo(this);
        popup.setVisible(true);
        char response = popup.getSelected();
        c=new Druid(txtname.getText(), race);
      c.abilities();
            c.proficiencies();
        Strength.setSelected(false);
     Dexterity.setSelected(true);
     Constitiution.setSelected(false);
     Intelligence.setSelected(true);
     Wisdom.setSelected(false);
     Charisma.setSelected(false);
     Lblgold.setText("Gold coins: "+c.getmoney());
     lblstrstat.setText("Strength "+c.getStr());
    lblstrmod.setText(""+c.modgetter(c.getStr()));
    lbldexstat.setText("Dexterity "+c.getDex());
    dexstat.setText(""+c.modgetter(c.getDex()));
        lblconstat.setText("Constitution "+c.getCon());
    conmod.setText(""+c.modgetter(c.getCon()));
        lblintstat.setText("Intelligence "+c.getIint());
    intmod.setText(""+c.modgetter(c.getIint()));
        lblwisstat.setText("Wisdom "+c.getWis());
    wismod.setText(""+c.modgetter(c.getWis()));
        lblcharstat.setText("Charisma "+c.getCha());
    charmod.setText(""+c.modgetter(c.getCha()));
    c.attacks(c.modgetter(c.getDex()), c.pb, response);
 c.hpget(c.getCon());
 c.acget(response, c.modgetter(c.dex));
 lblac.setText("Armor Class: "+c.getAc());
    lblmaxhp.setText("Max Hp "+c.getHp());
    lblinit.setText("Initiative "+c.modgetter(c.getDex()));
    lblperc.setText("Passive Wisdom(Perception) "+c.getPerc());
 
         for (String p:c.getProf()) {
             listporf.addElement(p);
        }
        for (String aby: c.getAbilities()) {
            ab.addElement(aby);
        }
        for (String eqp:c.getEquip()) {
            Equip.addElement(eqp);
        }
        for (String atkn:c.getattack()) {
             atk.addElement(atkn);
        }
    }//GEN-LAST:event_MnRogueActionPerformed

    private void mnpalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnpalActionPerformed
        ActualPopup popup = new ActualPopup(this, true);
        popup.setModal(true);
        popup.setLocationRelativeTo(this);
        popup.setVisible(true);
        char response = popup.getSelected();
        c=new Paladin(txtname.getText(), race);
        c.abilities();
            c.proficiencies();
        Strength.setSelected(false);
     Dexterity.setSelected(false);
     Constitiution.setSelected(false);
     Intelligence.setSelected(false);
     Wisdom.setSelected(true);
     Charisma.setSelected(true);
     Lblgold.setText("Gold coins: "+c.getmoney());
     lblstrstat.setText("Strength "+c.getStr());
    lblstrmod.setText(""+c.modgetter(c.getStr()));
    lbldexstat.setText("Dexterity "+c.getDex());
    dexstat.setText(""+c.modgetter(c.getDex()));
        lblconstat.setText("Constitution "+c.getCon());
    conmod.setText(""+c.modgetter(c.getCon()));
        lblintstat.setText("Intelligence "+c.getIint());
    intmod.setText(""+c.modgetter(c.getIint()));
        lblwisstat.setText("Wisdom "+c.getWis());
    wismod.setText(""+c.modgetter(c.getWis()));
        lblcharstat.setText("Charisma "+c.getCha());
    charmod.setText(""+c.modgetter(c.getCha()));
    c.attacks(c.modgetter(c.getStr()), c.pb, response);
 c.hpget(c.getCon());
 c.acget(response, c.modgetter(c.dex));
 lblac.setText("Armor Class: "+c.getAc());
    lblmaxhp.setText("Max Hp "+c.getHp());
    lblinit.setText("Initiative "+c.modgetter(c.getDex()));
    lblperc.setText("Passive Wisdom(Perception) "+c.getPerc());
 
           for (String p:c.getProf()) {
             listporf.addElement(p);
        }
        for (String aby: c.getAbilities()) {
            ab.addElement(aby);
        }
        for (String eqp:c.getEquip()) {
            Equip.addElement(eqp);
        }
        for (String atkn:c.getattack()) {
             atk.addElement(atkn);
        }
    }//GEN-LAST:event_mnpalActionPerformed

    private void mnsetGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnsetGenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnsetGenderActionPerformed

    private void MnAllingementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnAllingementActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MnAllingementActionPerformed

    private void mnweightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnweightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnweightActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dndsheet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dndsheet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dndsheet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dndsheet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dndsheet().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Charisma;
    private javax.swing.JRadioButton Constitiution;
    private javax.swing.JRadioButton Dexterity;
    private javax.swing.JRadioButton Intelligence;
    private javax.swing.JLabel Lblgold;
    private javax.swing.JList<String> ListPorf;
    private javax.swing.JList<String> Lstspell;
    private javax.swing.JMenuItem MnAllingement;
    private javax.swing.JMenuItem MnRogue;
    private javax.swing.JRadioButton Strength;
    private javax.swing.JRadioButton Wisdom;
    private javax.swing.JRadioButton btacr;
    private javax.swing.JRadioButton btah;
    private javax.swing.JRadioButton btarc;
    private javax.swing.JRadioButton btat;
    private javax.swing.JRadioButton btdec;
    private javax.swing.JRadioButton bthis;
    private javax.swing.JRadioButton btins;
    private javax.swing.JRadioButton btint;
    private javax.swing.JRadioButton btinv;
    private javax.swing.JRadioButton btmed;
    private javax.swing.JRadioButton btnat;
    private javax.swing.JButton btnreset;
    private javax.swing.JButton btnsetSkills;
    private javax.swing.JRadioButton btperc;
    private javax.swing.JRadioButton btperf;
    private javax.swing.JRadioButton btpers;
    private javax.swing.JRadioButton btrel;
    private javax.swing.JRadioButton btsoh;
    private javax.swing.JRadioButton btstl;
    private javax.swing.JRadioButton btwis;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel charmod;
    private javax.swing.JLabel conmod;
    private javax.swing.JLabel dexstat;
    private javax.swing.JButton dwncon;
    private javax.swing.JButton dwndex;
    private javax.swing.JButton dwnint;
    private javax.swing.JButton dwnstr;
    private javax.swing.JButton dwnwis;
    private javax.swing.JLabel intmod;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JLabel lblac;
    private javax.swing.JLabel lblcharstat;
    private javax.swing.JLabel lblclass;
    private javax.swing.JLabel lblconstat;
    private javax.swing.JLabel lbldexstat;
    private javax.swing.JLabel lblinit;
    private javax.swing.JLabel lblintstat;
    private javax.swing.JLabel lblmaxhp;
    private javax.swing.JLabel lblperc;
    private javax.swing.JLabel lblrace;
    private javax.swing.JLabel lblspd;
    private javax.swing.JLabel lblsplslots;
    private javax.swing.JLabel lblstrmod;
    private javax.swing.JLabel lblstrstat;
    private javax.swing.JLabel lblwisstat;
    private javax.swing.JList<String> listaby;
    private javax.swing.JList<String> lstCan;
    private javax.swing.JList<String> lstattacks;
    private javax.swing.JList<String> lstequipe;
    private javax.swing.JMenuItem mnAllingement;
    private javax.swing.JMenuItem mnMonk;
    private javax.swing.JCheckBoxMenuItem mnWizard;
    private javax.swing.JMenuItem mnbarb;
    private javax.swing.JCheckBoxMenuItem mnbard;
    private javax.swing.JMenuItem mnbrib;
    private javax.swing.JMenuItem mndruid;
    private javax.swing.JMenuItem mndwarf;
    private javax.swing.JMenuItem mnelf;
    private javax.swing.JMenuItem mnfight;
    private javax.swing.JMenuItem mnhflelf;
    private javax.swing.JMenuItem mnhuman;
    private javax.swing.JMenuItem mnpal;
    private javax.swing.JMenuItem mnsetGender;
    private javax.swing.JMenuItem mntief;
    private javax.swing.JMenuItem mnweight;
    private javax.swing.JLabel txtlvl;
    private javax.swing.JTextField txtname;
    private javax.swing.JButton upcha;
    private javax.swing.JButton upcon;
    private javax.swing.JButton updex;
    private javax.swing.JButton upint;
    private javax.swing.JButton upwis;
    private javax.swing.JLabel wismod;
    // End of variables declaration//GEN-END:variables
}
